{"task_url":"https://www.codechef.com/LTIME93B/problems/AVGSORT","statement":{"HTML":{"html":"\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/3.0.1/github-markdown.min.css\">\n\t\t<script type=\"text/x-mathjax-config\">\n\t\t\tMathJax.Hub.Config({\n\t\t\t\ttex2jax: {inlineMath: [['$','$']]}\n\t\t\t});\n\t\t</script>\n\t\t<script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML' async></script>\n\t\t<style>\n\t\t\t.markdown-body {\n\t\t\t\tbackground-color: white;\n\t\t\t\tpadding-bottom: 20px;\n\t\t\t}\n\t\t\t.markdown-body code {\n\t\t\t\tcolor: #24292e;\n\t\t\t}\n\t\t\t.solution-visible-txt {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body class=\"markdown-body\">\n\t\t<h1>Average Sorting</h1>\n<p>You are given a sequence $A_1, A_2, \\ldots, A_N$. You may perform the following operation any number of times: select any two adjacent elements $A_i$ and $A_{i + 1}$ and replace one of them with $\\frac{A_i + A_{i + 1}}{2}$ (a real number, i.e. without rounding). You may also select each pair of adjacent elements and each element to replace in multiple operations, i.e. any number of times.</p>\n<p>Is it possible to make the sequence strictly increasing in a finite number of operations?</p>\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.</li>\n<li>The first line of each test case contains a single integer $N$.</li>\n<li>The second line contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$.</li>\n</ul>\n<h3>Output</h3>\n<p>For each test case, print a single line containing the string <code>&quot;Yes&quot;</code> if it is possible to make the sequence strictly increasing or <code>&quot;No&quot;</code> otherwise (without quotes).</p>\n<p>You may print each character of each string in uppercase or lowercase (for example, the strings &quot;yEs&quot;, &quot;yes&quot;, &quot;Yes&quot; and &quot;YES&quot; will all be treated as identical).</p>\n<h3>Constraints</h3>\n<ul>\n<li>$1 \\leq T \\leq 50,000$</li>\n<li>$2 \\leq N \\leq 10^5$</li>\n<li>$1 \\le A_i \\le 10^9$ for each valid $i$</li>\n<li>the sum of $N$ over all test cases does not exceed $10^6$</li>\n</ul>\n<h3>Subtasks</h3>\n<p><strong>Subtask #1 (100 points):</strong> original constraints</p>\n<h3>Example Input</h3>\n<pre><code>4\n2\n7 4\n3\n1 2 2\n5\n5 5 5 5 5\n8\n7 2 4 1 6 8 3 9\n</code></pre>\n<h3>Example Output</h3>\n<pre><code>No\nYes\nNo\nYes\n</code></pre>\n<h3>Explanation</h3>\n<p><strong>Example case 1:</strong> Clearly, after any sequence of operations, $A_1 \\gt A_2$ holds, so it is impossible to make the sequence strictly increasing.</p>\n<p><strong>Example case 2:</strong>  Choose $A_1$ and $A_2$ and change $A_2$ to $\\frac{1+2}{2}$. The sequence after this operation is $[1, 1.5, 2]$, which is a strictly increasing sequence. </p>\n<p>There may also be other valid sequences of operations that give a strictly increasing sequence.</p>\n<p><strong>Example case 3:</strong> No matter which pair of adjacent elements we choose, we can only change one of them to $\\frac{5+5}{2} = 5$, so the sequence always remains $[5, 5, 5, 5, 5]$.</p>\n\n\t<body>\n</html>"}}}