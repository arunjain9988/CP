{"task_url":"https://www.codechef.com/JUNE20B/problems/DIFVAL","statement":{"HTML":{"html":"\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/3.0.1/github-markdown.min.css\">\n\t\t<script type=\"text/x-mathjax-config\">\n\t\t\tMathJax.Hub.Config({\n\t\t\t\ttex2jax: {inlineMath: [['$','$']]}\n\t\t\t});\n\t\t</script>\n\t\t<script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML' async></script>\n\t\t<style>\n\t\t\t.markdown-body {\n\t\t\t\tbackground-color: white;\n\t\t\t\tpadding-bottom: 20px;\n\t\t\t}\n\t\t\t.markdown-body code {\n\t\t\t\tcolor: #24292e;\n\t\t\t}\n\t\t\t.solution-visible-txt {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body class=\"markdown-body\">\n\t\t<h1>Danya and Different Values</h1>\n<h3>Read problem statements in <a href=\"http://www.codechef.com/download/translated/JUNE20/hindi/DIFVAL.pdf\">Hindi</a>, <a href=\"http://www.codechef.com/download/translated/JUNE20/bengali/DIFVAL.pdf\">Bengali</a>, <a href=\"http://www.codechef.com/download/translated/JUNE20/mandarin/DIFVAL.pdf\">Mandarin Chinese</a>, <a href=\"http://www.codechef.com/download/translated/JUNE20/russian/DIFVAL.pdf\">Russian</a>, and <a href=\"http://www.codechef.com/download/translated/JUNE20/vietnamese/DIFVAL.pdf\">Vietnamese</a> as well.</h3>\n<p>Danya has a rooted tree with $N$ nodes (numbered $1$ through $N$). Node $1$ is the root and for each $i$ ($2 \\le i \\le N$), the parent of the $i$-th node is $p_i$. For each valid $i$, the $i$-th node also has a value $a_i$.</p>\n<p>Danya really loves his tree and wants to play with it. You should answer his $Q$ queries. In each query:</p>\n<ul>\n<li>You are given two integers $X$ and $D$.</li>\n<li>Consider the set $S$ of all nodes $v$ that lie in the subtree of node $X$ (including $X$) such that the distance between $X$ and $v$ does not exceed $D$.</li>\n<li>The answer to this query is the number of different values $a_v$ among all $v \\in S$.</li>\n</ul>\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.</li>\n<li>The first line of each test case contains a single integer $N$.</li>\n<li>The second line contains $N-1$ space-separated integers $p_2, p_3, \\ldots, p_N$.</li>\n<li>The third line contains $N$ space-separated integers $a_1, a_2, \\ldots, a_N$.</li>\n<li>The fourth line contains a single integer $Q$.</li>\n<li>$Q$ lines follow. Each of these lines contains two space-separated integers $x$ and $d$ describing a query; the parameters $X$ and $D$ can be computed in the following way:\n<ul>\n<li>Let's denote the answer to the previous query by $ans$ ($ans = 0$ if this is the first query).</li>\n<li>Then, $X = x \\oplus ans$ and $D = d \\oplus ans$, where $\\oplus$ denotes the bitwise XOR operator.</li>\n</ul>\n</li>\n</ul>\n<h3>Output</h3>\n<p>For each query, print a single line containing one integer â€• the answer to the query.</p>\n<h3>Constraints</h3>\n<ul>\n<li>$1 \\le T \\le 5$</li>\n<li>$1 \\le N \\le 2 \\cdot 10^5$</li>\n<li>$1 \\le p_i \\le i-1$ for each valid $i$</li>\n<li>$1 \\le a_i \\le N$ for each valid $i$</li>\n<li>$1 \\le Q \\le 2 \\cdot 10^5$</li>\n<li>$0 \\le x, d \\le 4 \\cdot 10^5$</li>\n<li>$1 \\le X \\le N$</li>\n<li>$0 \\le D \\le N$</li>\n</ul>\n<h3>Subtasks</h3>\n<p><strong>Subtask #1 (16 points):</strong> $N, Q \\le 1,000$</p>\n<p><strong>Subtask #2 (24 points):</strong> the tree is a bamboo, i.e. $p_i = i-1$ for each valid $i$</p>\n<p><strong>Subtask #3 (60 points):</strong> original constraints </p>\n<h3>Example Input</h3>\n<pre><code>1\n11\n1 2 2 2 4 4 1 8 8 10\n5 3 2 3 1 1 2 4 1 2 3\n9\n2 1\n1 1\n2 3\n0 0\n2 1\n4 6\n13 4\n11 1\n13 4\n</code></pre>\n<h3>Example Output</h3>\n<pre><code>3\n3\n1\n3\n5\n5\n3\n4\n1\n</code></pre>\n\n\t<body>\n</html>"}}}