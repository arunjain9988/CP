{"task_url":"https://www.codechef.com/LTIME85B/problems/INCRDEC","statement":{"HTML":{"html":"\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/3.0.1/github-markdown.min.css\">\n\t\t<script type=\"text/x-mathjax-config\">\n\t\t\tMathJax.Hub.Config({\n\t\t\t\ttex2jax: {inlineMath: [['$','$']]}\n\t\t\t});\n\t\t</script>\n\t\t<script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML' async></script>\n\t\t<style>\n\t\t\t.markdown-body {\n\t\t\t\tbackground-color: white;\n\t\t\t\tpadding-bottom: 20px;\n\t\t\t}\n\t\t\t.markdown-body code {\n\t\t\t\tcolor: #24292e;\n\t\t\t}\n\t\t\t.solution-visible-txt {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body class=\"markdown-body\">\n\t\t<h1>Increasing Decreasing</h1>\n<h3>Read problem statements in <a href=\"http://www.codechef.com/download/translated/LTIME85/hindi/INCRDEC.pdf\">Hindi</a>, <a href=\"http://www.codechef.com/download/translated/LTIME85/bengali/INCRDEC.pdf\">Bengali</a>, <a href=\"http://www.codechef.com/download/translated/LTIME85/mandarin/INCRDEC.pdf\">Mandarin Chinese</a>, <a href=\"http://www.codechef.com/download/translated/LTIME85/russian/INCRDEC.pdf\">Russian</a>, and <a href=\"http://www.codechef.com/download/translated/LTIME85/vietnamese/INCRDEC.pdf\">Vietnamese</a> as well.</h3>\n<p>Chef received a new sequence $A_1, A_2, \\ldots, A_N$. He does not like arbitrarily ordered sequences, so he wants to permute the elements of $A$ in such a way that it would satisfy the following condition: there is an integer $p$ ($1 \\le p \\le N$) such that the first $p$ elements of the new (permuted) sequence are strictly increasing and the last $N-p+1$ elements are strictly decreasing.</p>\n<p>Help Chef and find a permutation of the given sequence which satisfies this condition or determine that no such permutation exists. If there are multiple solutions, you may find any one.</p>\n<h3>Input</h3>\n<ul>\n<li>The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.</li>\n<li>The first line of each test case contains a single integer $N$.</li>\n<li>The second line contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$.</li>\n</ul>\n<h3>Output</h3>\n<p>For each test case:</p>\n<ul>\n<li>If there is no permutation of $A$ that satisfies the given condition, print a single line containing the string <code>&quot;NO&quot;</code> (without quotes).</li>\n<li>Otherwise, print two lines.</li>\n<li>The first of these lines should contain the string <code>&quot;YES&quot;</code> (without quotes).</li>\n<li>The second line should contain $N$ space-separated integers â€• the elements of your permuted sequence.</li>\n</ul>\n<h3>Constraints</h3>\n<ul>\n<li>$1 \\le T \\le 100$</li>\n<li>$1 \\le N \\le 10^5$</li>\n<li>$1 \\le A_i \\le 2 \\cdot 10^5$ for each valid $i$</li>\n<li>the sum of $N$ over all test cases does not exceed $10^6$</li>\n</ul>\n<h3>Subtasks</h3>\n<p><strong>Subtask #1 (50 points):</strong></p>\n<ul>\n<li>$N \\le 10^3$</li>\n<li>$A_i \\le 2 \\cdot 10^3$ for each valid $i$</li>\n<li>the sum of $N$ over all test cases does not exceed $10^4$</li>\n</ul>\n<p><strong>Subtask #2 (50 points):</strong> original constraints</p>\n<h3>Example Input</h3>\n<pre><code>5\n4\n1 3 2 4\n4\n1 3 2 4\n6\n1 10 10 10 20 15\n5\n1 1 2 2 3\n4\n1 2 3 3\n</code></pre>\n<h3>Example Output</h3>\n<pre><code>YES\n1 2 3 4\nYES\n4 3 2 1\nNO\nYES\n1 2 3 2 1\nNO\n</code></pre>\n\n\t<body>\n</html>"}}}